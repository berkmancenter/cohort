<div id="tag-details-<%= contact_line.id %>" class="tag-details">
  <% if standalone %>
    <%= form_remote_tag :url => url_for(:controller => '/contacts', :action => :manage_tags, :id => contact_line), :update => "tag-details-#{contact_line.id}" %>
  <% end %>
  <h3>Tags: <span id="tag-count-<%= contact_line.id %>" class="tag-count"><span id="tag-count-count-<%= contact_line.id %>"><%= contact_line.tags.length.to_s %></span></span></h3>
  <ul class="pui-autocomplete-holder" style="border: none;" id="existing-tags-<%= contact_line.id %>">
    <%= render :partial => 'shared/existing_tags', :collection => contact_line.tags, :locals => {:object_id => contact_line.id, :param_name => 'contact[tag_ids][]'} %>
  </ul>
  <h3>Add tags:</h3>
  <p class="field"><%= text_field_tag 'new_tags', {}, {:id =>  'new_tags-' + contact_line.id.to_s} %></p>
  <% if standalone %>
    <p><%= submit_tag 'Save tag changes' %></p>
  </form>
<% end %>
<% if request.xhr? || init_observer %>
  <%= javascript_tag(%Q|ac = new UI.AutoComplete('new_tags-#{contact_line.id}',{shadow: "auto_complete", tokens: ',', url: '#{url_for(:controller => '/tags', :action => :json_tags)}' });
      ac.observe('input:empty', function(event) {event.memo.autocomplete.showMessage("Type a tag. New tags should be comma-separated.")})
      .observe('selection:empty', function(event) {event.memo.autocomplete.showMessage("Nothing found")});|) %>
      <%= javascript_tag %Q|if($('MB_overlay')){
        Modalbox.resizeToContent()
      }| %>
    <% end %>
  </div>
